<style>
body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}
</style>
<script src="http://d3js.org/d3.v2.js"></script>
<form>
<select id="year_selector" name="year">
  <option selected="selected">2012</option>
  <option>2011</option>
  <option>2010</option>
  <option>2009</option>
</select>
<select id="month_selector" name="month">
  <option value="0" selected="selected">January</option>
  <option value="1">February</option>
  <option value="2">March</option>
  <option value="3">April</option>
  <option value="4">May</option>
  <option value="5">June</option>
  <option value="6">July</option>
  <option value="7">August</option>
  <option value="8">September</option>
  <option value="9">October</option>
  <option value="10">November</option>
  <option value="11">December</option>
</select>
<select id="week_selector" name="week">
</select>
</form>
<div class="container">
</div>
<script>
var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y-%m-%d").parse;

var x = d3.time.scale()
  .range([0, width]);

var y = d3.scale.linear()
  .range([height, 0]);

var xAxis = d3.svg.axis()
  .scale(x)
  .orient("bottom");

var yAxis = d3.svg.axis()
  .scale(y)
  .orient("left");

var line = d3.svg.line()
  .x(function(d) { return x(d.date); })
  .y(function(d) { return y(d.high); });

var svg = d3.select("body")
  .append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.json("get_daily_glucose_ratios?year=2012&month=1&week=2",
  function(data) {
    data.forEach(function(d) {
        d.date = parseDate(d.date);
        d.high = +d.high;
    });
    x.domain(d3.extent(data, function(d) { return d.date; }));
    y.domain(d3.extent(data, function(d) { return d.high; }));

    svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

    svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Glucose");

    svg.append("path")
      .datum(data)
      .attr("class", "line")
      .attr("d", line);
  });
</script>
<script>
var year_selector = document.getElementById("year_selector")
year_selector.onchange = function () {
  console.log('lol');
};

var month_selector = document.getElementById("month_selector")
month_selector.onchange = function () {
  var year = year_selector.options[year_selector.selectedIndex].value;
  var month = month_selector.options[month_selector.selectedIndex].value;
  var curr_month = new Date(year, month);
  var curr_month_end = new Date(year, month + 1, 0);
  var curr_day = 8 - curr_month.getDay();
  curr_day = (curr_day == 8) ? 1 : curr_day;

  // make an adjustment for months that don't start on monday
  var curr_month_days = curr_month_end.getDate() - curr_day;
  var weeks = 1 + Math.ceil(curr_month_days / 7);
  var n_options = week_selector.options.length;
  for (var i = 0; i < n_options; i++) {
    week_selector.options.remove();
  }
  for (var i = 0; i < weeks; i++) {
    week_selector.options.add(new Option(i));
  }
};

var week_selector = document.getElementById("week_selector")
week_selector.onchange = function () {

};
</script>
